{"version":3,"sources":["App.js","index.js"],"names":["App","useState","searchValue","setSearchValue","searchedValue","setSearchedValue","data","isLoading","movies","setMovies","handleClick","a","axios","get","concat","toString","datas","className","TextField","variant","size","value","onChange","e","target","placeholder","InputProps","startAdornment","onClick","length","Search","map","item","Title","imdbID","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAqGeA,EA5FH,WAAO,IAAD,EAEwBC,mBAAS,IAFjC,mBAEPC,EAFO,KAEMC,EAFN,OAG4BF,mBAAS,IAHrC,mBAGPG,EAHO,KAGQC,EAHR,OAIcJ,mBAAS,CACjCK,KAAM,GACNC,WAAW,IAND,mBAIPC,EAJO,KAICC,EAJD,KAURC,EAAW,uCAAG,4BAAAC,EAAA,yDACI,KAAhBT,EADY,gCAEQU,IAAMC,IAftB,6CAekCC,OAAOZ,EAAYa,aAF7C,OAENC,EAFM,OAGZX,EAAiBH,GACjBO,EAAU,CACNH,KAAMU,EAAMV,KACZC,WAAW,IANH,2CAAH,qDAkCjB,OAQI,cANA,CAMA,OAAKU,UAAU,YAAf,UACI,oBAAIA,UAAU,UAAd,sBACA,mBAAGA,UAAU,YAAb,iDACA,sBAAKA,UAAU,SAAf,UACI,mBAAGA,UAAU,iBAAb,yBACA,cAACC,EAAA,EAAD,CACID,UAAU,aACVE,QAAQ,WACRC,KAAK,QACLC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOpB,EAAeoB,EAAEC,OAAOH,QACzCI,YAAY,SACZC,WAAY,CACRC,eAAgB,cAAC,IAAD,CAAYP,KAAK,cAGzC,sBAAKH,UAAU,gBAAf,UACI,mBAAGA,UAAU,UAAUW,QAhDnB,WAChBvB,EAAiB,IACjBI,EAAU,CACNH,KAAM,GACNC,WAAW,IAEfJ,EAAe,KA0CH,mBACA,wBAAQc,UAAU,aAAaW,QAASlB,EAAxC,SACI,mBAAGO,UAAU,gBAAb,4BAIVT,EAAOD,UAOL,qBAAKU,UAAU,gBAAf,SACI,mBAAGA,UAAU,wBAAb,+CAPJ,sBAAKA,UAAU,UAAf,UACI,oBAAGA,UAAU,wBAAb,0BAAmDb,EAAnD,OACA,mBAAGa,UAAU,mBAAb,2DA9Cc,IAAvBT,EAAOF,KAAKuB,OACH,6BAEKrB,EAAOF,KAAKwB,OAAOC,KAAI,SAACC,GAAD,OAChC,8BACI,mBAAGf,UAAU,cAAb,SAA4Be,EAAKC,SAD3BD,EAAKE,kBCzC/BC,EAAQ,KAGRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.2cb34674.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './styles/App.css';\nimport { TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from 'axios';\n\nconst baseUrl = 'http://www.omdbapi.com/?apikey=9a835ab1&s=';\n\n\nconst App = () => {\n\n    const [searchValue, setSearchValue] = useState('');\n    const [searchedValue, setSearchedValue] = useState('');\n    const [movies, setMovies] = useState({\n        data: [],\n        isLoading: true\n    });\n\n\n    const handleClick = async () => {\n        if (searchValue !== '') {\n            const datas = await axios.get(baseUrl.concat(searchValue.toString()));\n            setSearchedValue(searchValue);\n            setMovies({\n                data: datas.data,\n                isLoading: false,\n            });\n        }\n    };\n\n    const handleClear = () => {\n        setSearchedValue('');\n        setMovies({\n            data: [],\n            isLoading: true,\n        });\n        setSearchValue('');\n    };\n\n\n    const moviesJSX = () => {\n        if(movies.data.length === 0){\n            return (<></>);\n        }else{\n            const hops = movies.data.Search.map((item) => \n                <div key={item.imdbID}>\n                    <p className='movie-title'>{item.Title}</p>\n                </div>\n            );\n            return hops;\n        }\n    }\n\n    return (\n\n        /**\n         * From the search part I don't want to implement every component seperately,\n         * It would be more convenient for reusable parts but this task is a little bit small.\n         * \n         */\n\n        <div className='container'>\n            <h1 className='header1'>OMDb API</h1>\n            <p className='paragraph'>The Open Movie Databaseüçø</p>\n            <div className='search'>\n                <p className='paragraph-bold'>Movie title</p>\n                <TextField\n                    className='search-bar'\n                    variant='outlined'\n                    size='small'\n                    value={searchValue}\n                    onChange={(e) => setSearchValue(e.target.value)}\n                    placeholder='Search'\n                    InputProps={{\n                        startAdornment: <SearchIcon size='medium' />\n                    }}\n                />\n                <div className='btn-container'>\n                    <p className='btn-clr' onClick={handleClear}>clear</p>\n                    <button className='btn-submit' onClick={handleClick}>\n                        <p className='btn-paragraph'>search</p>\n                    </button>\n                </div>\n            </div>\n            {!movies.isLoading ?\n                <div className='results'>\n                    <p className='paragraph-bold-before'>Results for \"{searchedValue}\"</p>\n                    <p className='paragraph-detail'>click on a movie title to learn more about it</p>\n                    {moviesJSX()}\n                </div>\n                :\n                <div className='before-search'>\n                    <p className='paragraph-bold-before'>Search results will appear here</p>\n                </div>\n            }\n\n        </div>\n    )\n\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nrequire('react-web-vector-icons/fonts');\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}